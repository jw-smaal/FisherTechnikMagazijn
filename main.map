Archive member included because of file (symbol)

/opt/local/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                              /opt/local/lib/gcc/avr/4.8.2/../../../../avr/lib/avr5/crtm328p.o (exit)
/opt/local/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)
/opt/local/lib/gcc/avr/4.8.2/../../../../avr/lib/avr5/libm.a(cmpsf2.o)
                              main.o (__ltsf2)
/opt/local/lib/gcc/avr/4.8.2/../../../../avr/lib/avr5/libm.a(floatsisf.o)
                              main.o (__floatunsisf)
/opt/local/lib/gcc/avr/4.8.2/../../../../avr/lib/avr5/libm.a(fp_cmp.o)
                              /opt/local/lib/gcc/avr/4.8.2/../../../../avr/lib/avr5/libm.a(cmpsf2.o) (__fp_cmp)
/opt/local/lib/gcc/avr/4.8.2/../../../../avr/lib/avr5/libm.a(gesf2.o)
                              main.o (__gtsf2)

Allocating common symbols
Common symbol       size              file

globalXposition     0x1               main.o
globalYpulses       0x1               main.o
globalXpulses       0x1               main.o
globalYpulsesActual
                    0x1               main.o
globalYposition     0x1               main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /opt/local/lib/gcc/avr/4.8.2/../../../../avr/lib/avr5/crtm328p.o
LOAD main.o
LOAD FisherTechnikMagazijnModel.o
START GROUP
LOAD /opt/local/lib/gcc/avr/4.8.2/avr5/libgcc.a
LOAD /opt/local/lib/gcc/avr/4.8.2/../../../../avr/lib/avr5/libm.a
LOAD /opt/local/lib/gcc/avr/4.8.2/../../../../avr/lib/avr5/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x7c0
 *(.vectors)
 .vectors       0x0000000000000000       0x68 /opt/local/lib/gcc/avr/4.8.2/../../../../avr/lib/avr5/crtm328p.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000068                . = ALIGN (0x2)
                0x0000000000000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000068        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000068                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000068                __ctors_start = .
 *(.ctors)
                0x0000000000000068                __ctors_end = .
                0x0000000000000068                __dtors_start = .
 *(.dtors)
                0x0000000000000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000068        0x0 /opt/local/lib/gcc/avr/4.8.2/../../../../avr/lib/avr5/crtm328p.o
                0x0000000000000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000068        0xc /opt/local/lib/gcc/avr/4.8.2/../../../../avr/lib/avr5/crtm328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000074       0x10 /opt/local/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000074                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000084        0x8 /opt/local/lib/gcc/avr/4.8.2/../../../../avr/lib/avr5/crtm328p.o
 *(.init9)
 *(.text)
 .text          0x000000000000008c        0x4 /opt/local/lib/gcc/avr/4.8.2/../../../../avr/lib/avr5/crtm328p.o
                0x000000000000008c                __vector_20
                0x000000000000008c                __vector_1
                0x000000000000008c                __vector_24
                0x000000000000008c                __vector_12
                0x000000000000008c                __bad_interrupt
                0x000000000000008c                __vector_6
                0x000000000000008c                __vector_23
                0x000000000000008c                __vector_25
                0x000000000000008c                __vector_11
                0x000000000000008c                __vector_13
                0x000000000000008c                __vector_17
                0x000000000000008c                __vector_19
                0x000000000000008c                __vector_7
                0x000000000000008c                __vector_5
                0x000000000000008c                __vector_4
                0x000000000000008c                __vector_9
                0x000000000000008c                __vector_2
                0x000000000000008c                __vector_21
                0x000000000000008c                __vector_15
                0x000000000000008c                __vector_8
                0x000000000000008c                __vector_10
                0x000000000000008c                __vector_16
                0x000000000000008c                __vector_18
                0x000000000000008c                __vector_22
 .text          0x0000000000000090       0xda main.o
                0x0000000000000090                __vector_14
                0x00000000000000b2                __vector_3
                0x00000000000000ea                init_mcu
 .text          0x000000000000016a      0x416 FisherTechnikMagazijnModel.o
                0x000000000000017c                flashntimes
                0x00000000000001ac                allOff
                0x00000000000001c0                moveZin
                0x00000000000001d2                joystickState
                0x0000000000000206                motorXturn
                0x0000000000000214                motorXturnSteps
                0x000000000000023a                motorXmoveToPosition
                0x0000000000000280                motorYturn
                0x000000000000028e                moveToPosition
                0x0000000000000426                motorYturnSteps
                0x000000000000044e                motorYmoveToPosition
                0x0000000000000494                motorZturn
                0x00000000000004a2                moveZout
                0x00000000000004b6                moveToPickUpPoint
                0x0000000000000538                motorXoff
                0x0000000000000540                motorYoff
                0x0000000000000546                motorZoff
                0x000000000000054e                ledOn
                0x0000000000000552                ledOff
                0x0000000000000556                ledToggle
                0x0000000000000560                readPotMeter
 .text          0x0000000000000580        0x0 /opt/local/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000580        0x0 /opt/local/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text          0x0000000000000580        0x0 /opt/local/lib/gcc/avr/4.8.2/../../../../avr/lib/avr5/libm.a(cmpsf2.o)
 .text          0x0000000000000580        0x0 /opt/local/lib/gcc/avr/4.8.2/../../../../avr/lib/avr5/libm.a(floatsisf.o)
 .text          0x0000000000000580        0x0 /opt/local/lib/gcc/avr/4.8.2/../../../../avr/lib/avr5/libm.a(fp_cmp.o)
 .text          0x0000000000000580        0x0 /opt/local/lib/gcc/avr/4.8.2/../../../../avr/lib/avr5/libm.a(gesf2.o)
                0x0000000000000580                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000580      0x16a main.o
                0x0000000000000580                main
 .text.libgcc.mul
                0x00000000000006ea        0x0 /opt/local/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000006ea        0x0 /opt/local/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000006ea        0x0 /opt/local/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000006ea        0x0 /opt/local/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000006ea        0x0 /opt/local/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000006ea        0x0 /opt/local/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000006ea        0x0 /opt/local/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000006ea        0x0 /opt/local/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000006ea        0x0 /opt/local/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000006ea        0x0 /opt/local/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000006ea        0x0 /opt/local/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000006ea        0x0 /opt/local/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000006ea        0x0 /opt/local/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000000006ea        0x0 /opt/local/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.avr-libc.fplib
                0x00000000000006ea        0x8 /opt/local/lib/gcc/avr/4.8.2/../../../../avr/lib/avr5/libm.a(cmpsf2.o)
                0x00000000000006ea                __lesf2
                0x00000000000006ea                __nesf2
                0x00000000000006ea                __eqsf2
                0x00000000000006ea                __cmpsf2
                0x00000000000006ea                __ltsf2
 .text.avr-libc.fplib
                0x00000000000006f2       0x7a /opt/local/lib/gcc/avr/4.8.2/../../../../avr/lib/avr5/libm.a(floatsisf.o)
                0x00000000000006f2                __floatunsisf
                0x00000000000006f6                __floatsisf
 .text.avr-libc.fplib
                0x000000000000076c       0x48 /opt/local/lib/gcc/avr/4.8.2/../../../../avr/lib/avr5/libm.a(fp_cmp.o)
                0x000000000000076c                __fp_cmp
 .text.avr-libc.fplib
                0x00000000000007b4        0x8 /opt/local/lib/gcc/avr/4.8.2/../../../../avr/lib/avr5/libm.a(gesf2.o)
                0x00000000000007b4                __gtsf2
                0x00000000000007b4                __gesf2
                0x00000000000007bc                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000007bc        0x0 /opt/local/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                0x00000000000007bc                exit
                0x00000000000007bc                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000007bc        0x4 /opt/local/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000007c0                _etext = .

.data           0x0000000000800100        0x0 load address 0x00000000000007c0
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /opt/local/lib/gcc/avr/4.8.2/../../../../avr/lib/avr5/crtm328p.o
 .data          0x0000000000800100        0x0 main.o
 .data          0x0000000000800100        0x0 FisherTechnikMagazijnModel.o
 .data          0x0000000000800100        0x0 /opt/local/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800100        0x0 /opt/local/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .data          0x0000000000800100        0x0 /opt/local/lib/gcc/avr/4.8.2/../../../../avr/lib/avr5/libm.a(cmpsf2.o)
 .data          0x0000000000800100        0x0 /opt/local/lib/gcc/avr/4.8.2/../../../../avr/lib/avr5/libm.a(floatsisf.o)
 .data          0x0000000000800100        0x0 /opt/local/lib/gcc/avr/4.8.2/../../../../avr/lib/avr5/libm.a(fp_cmp.o)
 .data          0x0000000000800100        0x0 /opt/local/lib/gcc/avr/4.8.2/../../../../avr/lib/avr5/libm.a(gesf2.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800100                . = ALIGN (0x2)
                0x0000000000800100                _edata = .
                0x0000000000800100                PROVIDE (__data_end, .)

.bss            0x0000000000800100        0x5
                0x0000000000800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800100        0x0 /opt/local/lib/gcc/avr/4.8.2/../../../../avr/lib/avr5/crtm328p.o
 .bss           0x0000000000800100        0x0 main.o
 .bss           0x0000000000800100        0x0 FisherTechnikMagazijnModel.o
 .bss           0x0000000000800100        0x0 /opt/local/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800100        0x0 /opt/local/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800100        0x0 /opt/local/lib/gcc/avr/4.8.2/../../../../avr/lib/avr5/libm.a(cmpsf2.o)
 .bss           0x0000000000800100        0x0 /opt/local/lib/gcc/avr/4.8.2/../../../../avr/lib/avr5/libm.a(floatsisf.o)
 .bss           0x0000000000800100        0x0 /opt/local/lib/gcc/avr/4.8.2/../../../../avr/lib/avr5/libm.a(fp_cmp.o)
 .bss           0x0000000000800100        0x0 /opt/local/lib/gcc/avr/4.8.2/../../../../avr/lib/avr5/libm.a(gesf2.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800100        0x5 main.o
                0x0000000000800100                globalXposition
                0x0000000000800101                globalYpulses
                0x0000000000800102                globalXpulses
                0x0000000000800103                globalYpulsesActual
                0x0000000000800104                globalYposition
                0x0000000000800105                PROVIDE (__bss_end, .)
                0x00000000000007c0                __data_load_start = LOADADDR (.data)
                0x00000000000007c0                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800105        0x0
                0x0000000000800105                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800105                PROVIDE (__noinit_end, .)
                0x0000000000800105                _end = .
                0x0000000000800105                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature      0x0000000000840000        0x3
 *(.signature*)
 .signature     0x0000000000840000        0x3 main.o
                0x0000000000840000                __signature

.stab           0x0000000000000000     0x297c
 *(.stab)
 .stab          0x0000000000000000      0x6cc /opt/local/lib/gcc/avr/4.8.2/../../../../avr/lib/avr5/crtm328p.o
 .stab          0x00000000000006cc      0x96c main.o
                                        0x978 (size before relaxing)
 .stab          0x0000000000001038     0x1230 FisherTechnikMagazijnModel.o
                                       0x13ec (size before relaxing)
 .stab          0x0000000000002268       0x6c /opt/local/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                                         0x78 (size before relaxing)
 .stab          0x00000000000022d4       0xb4 /opt/local/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                                         0xc0 (size before relaxing)
 .stab          0x0000000000002388       0x90 /opt/local/lib/gcc/avr/4.8.2/../../../../avr/lib/avr5/libm.a(cmpsf2.o)
                                         0x9c (size before relaxing)
 .stab          0x0000000000002418      0x318 /opt/local/lib/gcc/avr/4.8.2/../../../../avr/lib/avr5/libm.a(floatsisf.o)
                                        0x324 (size before relaxing)
 .stab          0x0000000000002730      0x1e0 /opt/local/lib/gcc/avr/4.8.2/../../../../avr/lib/avr5/libm.a(fp_cmp.o)
                                        0x1ec (size before relaxing)
 .stab          0x0000000000002910       0x6c /opt/local/lib/gcc/avr/4.8.2/../../../../avr/lib/avr5/libm.a(gesf2.o)
                                         0x78 (size before relaxing)

.stabstr        0x0000000000000000     0x15a5
 *(.stabstr)
 .stabstr       0x0000000000000000     0x15a5 /opt/local/lib/gcc/avr/4.8.2/../../../../avr/lib/avr5/crtm328p.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 main.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 FisherTechnikMagazijnModel.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(main.elf elf32-avr)
LOAD linker stubs
